[crypt-command]
syntax = crypt mode=<d|e> key=<file_path> [randpadding=<boolean> keyencryption=<boolean>] <field-list>
shortdesc = Encrypt the content of fields provided by <field-list> using RSA and the key in PEM format specified by <key> or \
            decrypt the RSA encrypted content of fields provided by <field-list> the key specified by <key>.
            
description = Values of fields provided by field-list are encrypted or decrypted with \
              the key provided by key depending on the mode set by mode. \
    
              When setting mode=e encryption is specified. \
              Fields provided by field-list are encrypted using the PEM key file provided by key. \
              When setting randpadding to false, no random padding is used resulting in a unique result \
              for each unique value. Otherwise a unique result for each unique event is generated.

              When setting mode=d decryption is specified. \
              Fields provided by field-list are decrypted using the PEM key file provided by key. \   
              When using an encrypted private key for field decryption, set the optional \
              parameter keyencryption to true. \ 
              The password to use will be drawn from Splunk's password storage. \
              Passwords can be set per user and key file in the app's set up screen. \
    
              The crypt command is a streaming command, it does not change data stored in your indexes.
          
comment1 = Decrypt the content of the already RSA encrypted field username for output in plain text \
           using the key file lib/keys/private.pem. The key file is encrypted with AES256-CBC, so set keyencryption to true. \
           The correspondig password has to be set via the app's set up screen prior to using the key.   
           
example1 = search sourcetype="server::access" | crypt mode=d key=lib/keys/private.pem \
           keyencryption=true username | table _time action username
    
comment2 = Encrypt the values of the fields subject and content of sourcetype mail stored in plain text.
    
example2 = search sourcetype="mail" | crypt mode=e key=lib/keys/public.pem subject content
    
comment3 = Encrypt raw events of sourcetype mail and collect the results in a summary index.
    
example3 = search sourcetype="mail" | crypt mode=e key=lib/keys/public.pem _raw | collect index=summary
           
usage = public
related = eval, stats, hash
tags = hypercrypto, encryption, decryption, rsa



[hash-command]
syntax = hash algorithm=<md5|sha1|sha224|sha256|sha384|sha512> [saltfile=<fiel_path>] <field-list>
shortdesc = Hash the content of fields provided by <field-list> using the algorithm specified by <algorithm>.
            
description = Values of fields provided by field-list are hashed using the algorithm specified \
              by algorithm. Optionally the salt stored in saltfile is applied.
              Currently supported algorithms for field hashing are are  MD5, SHA1, SHA224, SHA256, SHA384, SHA512.
          
comment1 = Hash the content of the field body using SHA256 and apply the salt stored in splunk.secret. 
           
example1 = search sourcetype="apache::data" | hash algoritm=sha256 \
           saltfile=/opt/splunk/etc/auth/splunk.secret body
           
usage = public
related = eval, stats, crypt
tags = hypercrypto, hash, md5, sha, sha1, sha224, sha256, sha384, sha512