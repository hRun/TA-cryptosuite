[crypt-command]
syntax      = crypt (<crypt-options>)* <field-list>
shortdesc   = Encrypt or decrypt the content of fields provided by <field-list> using <algorithm> and <key>.
description = Values of fields provided by <field-list> are encrypted or decrypted with the key provided by <key> depending on the mode set by <mode>. \
  The crypt command is a streaming command, it does not change data stored in your indexes. \
  To index encrypted events, pipe to the collect command.
    
example1 = search sourcetype="mail" | crypt mode=e algorithm=aes-256-cbc key=public.pem _raw | collect index=summary
comment1 = Encrypt raw events of sourcetype mail and collect the results in a summary index.

example2 = search index=summary sourcetype="server::access" | crypt mode=d algorithm=rsa key=private.pem username | table _time action username
comment2 = Decrypt the content of the already RSA encrypted and summary-indexed field "username" for output in plain text using RSA. \
  The key file "private.pem" is encrypted with AES256-CBC, so the correspondig password has to be set via the app's configuratipon dashboard prior to using the key.

usage   = public
related = eval, stats, hash
tags    = crypto, encryption, decryption, rsa, aes

[crypt-options]
syntax = mode=<d|e> | algorithm=<rsa|aes-128-cbc|aes-192-cbc|aes-256-cbc> | key=<key_name>



[hash-command]
syntax      = hash (<hash-options>)* <field-list>
shortdesc   = Hash the content of fields provided by <field-list> using the algorithm specified by <algorithm>.
description = Values of fields provided by <field-list> are hashed using the algorithm specified by <algorithm>. \
  Optionally the salt stored in <salt> is applied. \
  MD5, SHA1 and SHA2 hashing algorithms are supported for both Python 2 and 3. \
  SHA3 and Blake2 hashing algorithms are only supported when using Python 3 as Splunk's interpreter. \
  The hash command is a streaming command, it does not change data stored in your indexes.

example1 = search sourcetype="apache::data" | hash algorithm=sha256 salt=secret.txt body
comment1 = Hash the content of the field body using SHA256 and apply the salt stored in secret.txt. 
           
usage   = public
related = eval, stats, crypt
tags    = hash, md5, sha, sha1, sha2, sha224, sha256, sha384, sha512, sha3, sha3_224, sha3_256, sha3_384, sha3_512, blake2, blake2b, blake2s

[hash-options]
syntax = algorithm=<md5|sha1|sha224|sha256|sha384|sha512|sha3_224|sha3_256|sha3_384|sha3_512|blake2b|blake2s> | (salt=<salt_name>)
