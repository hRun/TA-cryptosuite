##############################################################################
#---      A Splunk> Support Add-On providing the 'crypt' command for      ---#
#---   encrypting fields using RSA and decrypting RSA encrypted fields.   ---#
##############################################################################

### Key Features

 - Encrypt fields during search time using RSA
 - Decrypt fields during search time using RSA
 
 - Manage the usage of encryption and decryption via two new roles
 - Manage the decryption of specific fields on a per user basis using         \
   encrypted private key files and providing only authorized users with the   \
   corresponding password.
 - The purpose is to allow only a specific set of users to view certain       \
   information due to legal restrictions, privacy policies, etc.

### Set Up

 - Place SA-hypercrypto under $SPLUNK_HOME/etc/apps/
 - Provide users or roles with the roles 'can_encrypt' and/or 'can_decrypt'   \
   needed for using the crypt command.
 - Generate a valid RSA key pair and store it in PEM format.
   Example using OpenSSL:
     openssl genrsa [-aes256|-des|-des3 -passout pass:password] -out          \
     private.pem <1024|2048|4096>
     openssl rsa -in private.pem -outform PEM -RSAPublicKey_out -out public.pem
 - Optional: 
   If you plan to use an encrypted private key provide a corresponding password
   via the app's set up screen 'Manage Apps -> SA-hypercrypto -> Set Up'.
   Passwords for encrypted private key files can be set per user and key file \
   and get stored in Splunk's internal password storage.
   
   Note: This procedure is a security feature, since specifing the password   \
         directly in the search would make it visible in the _internal index.

### Usage

 - Syntax
   crypt mode=<d|e> key=<filepath> [keyencryption=<true|false>] <fieldlist>
   
   where 
   mode=e specifies encryption for the given field list using the provided key.
   mode=d specifies decryption for the given field list using the provided key.
   
   When using an encrypted private key for field decryption, set the optional \
   parameter 'keyencryption' to true. The password to use will be drawn from  \
   Splunk's password storage.
   Passwords can be set per user and key file in the app's set up screen.
   Currently supported algorithms for key encryption are AES256-CBC, DES-CBC  \
   and DES-EDE3-CBC.

### Examples

    Decrypt the content of the already RSA encrypted field username for       \
    output in plain text using the key file lib/keys/private.pem.
    The key file is encrypted with AES256-CBC, so set keyencryption to true.  \
    The correspondig password has to be set via the app's set up screen prior \
    to using the key.
    
    search sourcetype="server::access" | crypt mode=d key=lib/keys/private.pem
    keyencryption=true username | table _time action username
    
    Encrypt the values of the fields subject and content of sourcetype mail   \
    stored in plain text.
    
    search sourcetype="mail" | crypt mode=e key=lib/keys/public.pem subject content
    
    Encrypt the values of the field subject and content of sourcetype mail    \ 
    stored in plain text and collect the events in a summary index.
    Note: Since the command does not modify the original fields, you can not  \
          collect the events with modified content directly. You have to      \
          pre-format the information to collect using table etc.
    
    search sourcetype="mail" | crypt mode=e key=lib/keys/public.pem subject   \
    content | table sender referer subject content | collect index=summary
    
### Restrictions

 - Attempts to encrypt _raw or _time will be ignored since Splunk expects a   \
   valid _time field. 
 - Wildcards for field names are not supported.
 - Currently only PKCS#1 and PKCS#1.5 are supported.
 - Password management via the set up screen has not been implemented yet,    \
   since Splunk does not provide a way to do so via SimpleXML.                \
   So you can not update stored passwords at this point in time.              \
   Manage your stored passwords in SA-hypercrypto/local/app.conf.
 - Currently only AES-256-CBC, DES-CBC and DES-EDE3-CBC are supported for     \
   private key file encryption.

### Notes

 - The encryption algorithm uses random padding for security reasons so       \
   encrypting a field will result in a distinct value for each event.
 - Collecting encrypted events in a summary index requires pre-formatting     \
   using table etc. since the original events won't get modified. Fields like \
   host and source might become prepended with orig_ by Splunk when collecting them.
 - Tested with Splunk 6.2.x
 
 - The crypt command uses the python RSA implementation by Sybren A. Stuevel  \
   <sybren@stuvel.eu> licensed under the under the Apache License, Version 2.0
   http://www.apache.org/licenses/LICENSE-2.0

 